{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///workspace/apps/web-next/src/server/trpc.ts"],"sourcesContent":["import { initTRPC, TRPCError } from '@trpc/server';\nimport superjson from 'superjson';\nimport { ZodError } from 'zod';\n\nexport type JwtUser = {\n  id: number;\n  username: string;\n  email: string;\n  role: 'admin' | 'professor' | 'student';\n};\n\nexport type Context = {\n  user?: JwtUser | null;\n};\n\nconst t = initTRPC.context<Context>().create({\n  transformer: superjson,\n  errorFormatter({ shape, error }) {\n    return {\n      ...shape,\n      data: {\n        ...shape.data,\n        zodError:\n          error.cause instanceof ZodError ? error.cause.flatten() : null,\n      },\n    };\n  },\n});\n\nexport const router = t.router;\nexport const publicProcedure = t.procedure;\nexport const protectedProcedure = t.procedure.use(\n  t.middleware(({ ctx, next }) => {\n    if (!ctx.user) {\n      throw new TRPCError({ code: 'UNAUTHORIZED' });\n    }\n    return next({ ctx });\n  }),\n);"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;AAaA,MAAM,IAAI,yLAAA,CAAA,WAAQ,CAAC,OAAO,GAAY,MAAM,CAAC;IAC3C,aAAa,kHAAA,CAAA,UAAS;IACtB,gBAAe,EAAE,KAAK,EAAE,KAAK,EAAE;QAC7B,OAAO;YACL,GAAG,KAAK;YACR,MAAM;gBACJ,GAAG,MAAM,IAAI;gBACb,UACE,MAAM,KAAK,YAAY,sGAAA,CAAA,WAAQ,GAAG,MAAM,KAAK,CAAC,OAAO,KAAK;YAC9D;QACF;IACF;AACF;AAEO,MAAM,SAAS,EAAE,MAAM;AACvB,MAAM,kBAAkB,EAAE,SAAS;AACnC,MAAM,qBAAqB,EAAE,SAAS,CAAC,GAAG,CAC/C,EAAE,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE;IACzB,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,MAAM,IAAI,mMAAA,CAAA,YAAS,CAAC;YAAE,MAAM;QAAe;IAC7C;IACA,OAAO,KAAK;QAAE;IAAI;AACpB","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///workspace/src/server/database/schema.ts"],"sourcesContent":["import { relations, sql } from 'drizzle-orm';\nimport {\n  date,\n  integer,\n  pgEnum,\n  pgTable,\n  real,\n  serial,\n  text,\n  timestamp,\n  varchar,\n  boolean,\n  uniqueIndex,\n  primaryKey,\n  foreignKey,\n  decimal,\n} from 'drizzle-orm/pg-core';\nimport { createInsertSchema, createSelectSchema } from 'drizzle-zod';\nimport { z } from 'zod';\n// --- Auth Schema ---\n\nexport const userRoleEnum = pgEnum('user_role', [\n  'admin',\n  'professor', // Added professor based on project description\n  'student',\n  // 'monitor', // Monitor is an implicit role based on 'vaga' association, not a direct user role initially\n]);\n\nexport const userTable = pgTable('user', {\n  id: serial('id').primaryKey(),\n  username: text('username').notNull().unique(), // UFBA Login\n  email: text('email').notNull().unique(), // UFBA Email\n  role: userRoleEnum('role').notNull().default('student'), // Default to student\n  // Assinatura padrão para admins\n  assinaturaDefault: text('assinatura_default'), // Base64 data URL da assinatura\n  dataAssinaturaDefault: timestamp('data_assinatura_default', {\n    withTimezone: true,\n    mode: 'date',\n  }),\n});\n\nexport const sessionTable = pgTable('session', {\n  id: text('id').primaryKey(),\n  userId: integer('user_id')\n    .notNull()\n    .references(() => userTable.id),\n  expiresAt: timestamp('expires_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).notNull(),\n});\n\nexport const userRelations = relations(userTable, ({ many, one }) => ({\n  sessions: many(sessionTable),\n  professorProfile: one(professorTable, {\n    // Link to professor profile if role is professor\n    fields: [userTable.id],\n    references: [professorTable.userId],\n  }),\n  studentProfile: one(alunoTable, {\n    // Link to student profile if role is student\n    fields: [userTable.id],\n    references: [alunoTable.userId],\n  }),\n}));\n\nexport const sessionRelations = relations(sessionTable, ({ one }) => ({\n  user: one(userTable, {\n    fields: [sessionTable.userId],\n    references: [userTable.id],\n  }),\n}));\n\n// --- Application Domain Schema ---\n\nexport const semestreEnum = pgEnum('semestre_enum', [\n  'SEMESTRE_1',\n  'SEMESTRE_2',\n]);\n\nexport const tipoProposicaoEnum = pgEnum('tipo_proposicao_enum', [\n  'INDIVIDUAL',\n  'COLETIVA',\n]);\n\nexport const tipoVagaEnum = pgEnum('tipo_vaga_enum', [\n  'BOLSISTA',\n  'VOLUNTARIO',\n]);\n\nexport const projetoStatusEnum = pgEnum('projeto_status_enum', [\n  'DRAFT', // Professor creating the project\n  'SUBMITTED', // Professor submitted for admin approval\n  'APPROVED', // Admin approved and signed\n  'REJECTED', // Admin rejected\n  'PENDING_ADMIN_SIGNATURE', // Admin approved but needs to sign (optional status)\n  'PENDING_PROFESSOR_SIGNATURE', // Generated from import, needs professor signature\n]);\n\nexport const generoEnum = pgEnum('genero_enum', [\n  'MASCULINO',\n  'FEMININO',\n  'OUTRO',\n]);\n\nexport const regimeEnum = pgEnum('regime_enum', ['20H', '40H', 'DE']);\n\nexport const tipoInscricaoEnum = pgEnum('tipo_inscricao_enum', [\n  'BOLSISTA',\n  'VOLUNTARIO',\n  'ANY', // Changed from QUALQUER for clarity\n]);\n\nexport const tipoDocumentoProjetoEnum = pgEnum('tipo_documento_projeto_enum', [\n  'PROPOSTA_ORIGINAL',\n  'PROPOSTA_ASSINADA_PROFESSOR',\n  'PROPOSTA_ASSINADA_ADMIN',\n  'ATA_SELECAO',\n]);\n\nexport const tipoAssinaturaEnum = pgEnum('tipo_assinatura_enum', [\n  'PROJETO_PROFESSOR_RESPONSAVEL',\n  'TERMO_COMPROMISSO_ALUNO',\n  'EDITAL_ADMIN',\n  'ATA_SELECAO_PROFESSOR',\n  'PROJETO_COORDENADOR_DEPARTAMENTO',\n]);\n\nexport const statusInscricaoEnum = pgEnum('status_inscricao_enum', [\n  'SUBMITTED', // Aluno aplicou\n  'SELECTED_BOLSISTA', // Professor selecionou (bolsista)\n  'SELECTED_VOLUNTARIO', // Professor selecionou (voluntário)\n  'ACCEPTED_BOLSISTA', // Aluno aceitou (bolsista)\n  'ACCEPTED_VOLUNTARIO', // Aluno aceitou (voluntário)\n  'REJECTED_BY_PROFESSOR', // Professor rejeitou\n  'REJECTED_BY_STUDENT', // Aluno recusou\n  // 'INAPTO', 'APTO' seem less relevant if selection is direct\n]);\n\nexport const departamentoTable = pgTable('departamento', {\n  id: serial('id').primaryKey(),\n  unidadeUniversitaria: varchar('unidade_universitaria').notNull(),\n  nome: varchar('nome').notNull(),\n  sigla: varchar('sigla'),\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n});\n\nexport const selectDepartamentoTableSchema =\n  createSelectSchema(departamentoTable);\n\nexport const insertDepartamentoTableSchema = createInsertSchema(\n  departamentoTable,\n).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const projetoTable = pgTable('projeto', {\n  id: serial('id').primaryKey(),\n  // dataAprovacao: date('data_aprovacao', { mode: 'date' }), // Approval date might be inferred from status change\n  departamentoId: integer('departamento_id')\n    .references(() => departamentoTable.id)\n    .notNull(),\n  ano: integer('ano').notNull(),\n  semestre: semestreEnum('semestre').notNull(),\n  tipoProposicao: tipoProposicaoEnum('tipo_proposicao').notNull(),\n  bolsasSolicitadas: integer('bolsas_solicitadas').notNull().default(0), // Professor defines\n  voluntariosSolicitados: integer('voluntarios_solicitados')\n    .notNull()\n    .default(0), // Professor defines\n  bolsasDisponibilizadas: integer('bolsas_disponibilizadas').default(0), // Admin defines after approval\n  // voluntariosAtendidos: integer('voluntarios_atendidos'), // Calculated from accepted 'vaga'\n  cargaHorariaSemana: integer('carga_horaria_semana').notNull(),\n  numeroSemanas: integer('numero_semanas').notNull(),\n  publicoAlvo: text('publico_alvo').notNull(),\n  estimativaPessoasBenificiadas: integer('estimativa_pessoas_benificiadas'),\n  professorResponsavelId: integer('professor_responsavel_id')\n    .references(() => professorTable.id)\n    .notNull(),\n  titulo: varchar('titulo').notNull(), // Added title\n  descricao: text('descricao').notNull(), // Objectives/Justification\n  status: projetoStatusEnum('status').notNull().default('DRAFT'),\n  assinaturaProfessor: text('assinatura_professor'), // base64 data URL\n  // analiseSubmissao: text('analise_submissao'), // Renamed/Repurposed\n  feedbackAdmin: text('feedback_admin'), // Admin feedback on approval/rejection\n  // documentoUniqueId: text('documento_unique_id'), // Link to separate document table\n  // assinaturaUniqueId: text('assinatura_unique_id'), // Link to separate signature process/table\n  // validado: boolean('validado').notNull().default(false), // Status handles validation\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n  deletedAt: timestamp('deleted_at', {\n    withTimezone: true,\n    mode: 'date',\n  }),\n});\n\nexport const selectProjetoTableSchema = createSelectSchema(projetoTable);\nexport const insertProjetoTableSchema = createInsertSchema(projetoTable).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  deletedAt: true,\n});\n\nexport const projetoDisciplinaTable = pgTable('projeto_disciplina', {\n  id: serial('id').primaryKey(),\n  projetoId: integer('projeto_id')\n    .references(() => projetoTable.id, { onDelete: 'cascade' })\n    .notNull(),\n  disciplinaId: integer('disciplina_id')\n    .references(() => disciplinaTable.id)\n    .notNull(),\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  // deletedAt: timestamp('deleted_at', {\n  //   withTimezone: true,\n  //   mode: 'date',\n  // }), // Usually handled by removing the row\n});\n\n// Participating professors (excluding the main responsible one)\nexport const projetoProfessorParticipanteTable = pgTable(\n  'projeto_professor_participante',\n  {\n    id: serial('id').primaryKey(),\n    projetoId: integer('projeto_id')\n      .references(() => projetoTable.id, { onDelete: 'cascade' })\n      .notNull(),\n    professorId: integer('professor_id')\n      .references(() => professorTable.id)\n      .notNull(),\n    createdAt: timestamp('created_at', {\n      withTimezone: true,\n      mode: 'date',\n    })\n      .defaultNow()\n      .notNull(),\n  },\n);\n\nexport const atividadeProjetoTable = pgTable('atividade_projeto', {\n  id: serial('id').primaryKey(),\n  projetoId: integer('projeto_id')\n    .references(() => projetoTable.id, { onDelete: 'cascade' })\n    .notNull(),\n  descricao: text('descricao').notNull(),\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  // deletedAt: timestamp('deleted_at', {\n  //   withTimezone: true,\n  //   mode: 'date',\n  // }),\n});\n\nexport const selectAtividadeProjetoTableSchema = createSelectSchema(atividadeProjetoTable);\n\nexport const professorTable = pgTable('professor', {\n  id: serial('id').primaryKey(),\n  userId: integer('user_id')\n    .references(() => userTable.id, { onDelete: 'cascade' })\n    .notNull()\n    .unique(), // Link to auth user\n  departamentoId: integer('departamento_id')\n    .references(() => departamentoTable.id)\n    .notNull(),\n  nomeCompleto: varchar('nome_completo').notNull(),\n  nomeSocial: varchar('nome_social'),\n  matriculaSiape: varchar('matricula_siape'),\n  genero: generoEnum('genero').notNull(),\n  regime: regimeEnum('regime').notNull(),\n  especificacaoGenero: varchar('especificacao_genero'),\n  cpf: varchar('cpf').notNull(), // Unique?\n  telefone: varchar('telefone'),\n  telefoneInstitucional: varchar('telefone_institucional'),\n  emailInstitucional: varchar('email_institucional').notNull(),\n  // Document file IDs for professor documents\n  curriculumVitaeFileId: text('curriculum_vitae_file_id'),\n  comprovanteVinculoFileId: text('comprovante_vinculo_file_id'),\n  // Assinatura padrão do professor\n  assinaturaDefault: text('assinatura_default'), // Base64 data URL da assinatura\n  dataAssinaturaDefault: timestamp('data_assinatura_default', {\n    withTimezone: true,\n    mode: 'date',\n  }),\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n  // deletedAt handled by user deletion cascade?\n});\nexport const selectProfessorTableSchema = createSelectSchema(professorTable);\nexport const insertProfessorTableSchema = createInsertSchema(\n  professorTable,\n).omit({\n  id: true,\n  userId: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const disciplinaTable = pgTable('disciplina', {\n  id: serial('id').primaryKey(),\n  nome: varchar('nome').notNull(),\n  codigo: varchar('codigo').notNull(),\n  departamentoId: integer('departamento_id')\n    .references(() => departamentoTable.id)\n    .notNull(), // Add department link\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n  deletedAt: timestamp('deleted_at', {\n    withTimezone: true,\n    mode: 'date',\n  }),\n},\n(table) => {\n  return {\n    codigoUnicoPorDepartamento: uniqueIndex(\n      'codigo_unico_por_departamento_idx',\n    ).on(table.codigo, table.departamentoId),\n  };\n},\n);\n\nexport const selectDisciplinaTableSchema = createSelectSchema(disciplinaTable);\nexport const insertDisciplinaTableSchema = createInsertSchema(\n  disciplinaTable,\n).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  deletedAt: true,\n});\n\nexport const alunoTable = pgTable('aluno', {\n  id: serial('id').primaryKey(),\n  userId: integer('user_id')\n    .references(() => userTable.id, { onDelete: 'cascade' })\n    .notNull()\n    .unique(), // Link to auth user\n  nomeCompleto: varchar('nome_completo').notNull(),\n  nomeSocial: varchar('nome_social'),\n  genero: generoEnum('genero').notNull(),\n  especificacaoGenero: varchar('especificacao_genero'),\n  emailInstitucional: varchar('email_institucional').notNull(),\n  matricula: varchar('matricula').notNull().unique(), // Make unique\n  rg: varchar('rg'), // Nullable?\n  cpf: varchar('cpf').notNull().unique(), // Make unique\n  cr: real('CR').notNull(),\n  telefone: varchar('telefone'),\n  enderecoId: integer('endereco_id').references(() => enderecoTable.id), // Nullable\n  cursoId: integer('curso_id')\n    .references(() => cursoTable.id)\n    .notNull(),\n  // Document file IDs for student documents\n  historicoEscolarFileId: text('historico_escolar_file_id'),\n  comprovanteMatriculaFileId: text('comprovante_matricula_file_id'),\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n  // deletedAt handled by user deletion cascade?\n});\nexport const selectAlunoTableSchema = createSelectSchema(alunoTable);\nexport const insertAlunoTableSchema = createInsertSchema(alunoTable).omit({\n  id: true,\n  userId: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const enderecoTable = pgTable('endereco', {\n  id: serial('id').primaryKey(),\n  numero: integer('numero'),\n  rua: varchar('rua').notNull(),\n  bairro: varchar('bairro').notNull(),\n  cidade: varchar('cidade').notNull(),\n  estado: varchar('estado').notNull(),\n  cep: varchar('cep').notNull(),\n  complemento: varchar('complemento'),\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n  // deletedAt: timestamp('deleted_at', {\n  //   withTimezone: true,\n  //   mode: 'date',\n  // }), // Usually not soft deleted\n});\n\nexport const cursoTable = pgTable('curso', {\n  id: serial('id').primaryKey(),\n  nome: varchar('nome').notNull(),\n  codigo: integer('codigo').notNull(), // Nullable?\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n});\n\nexport const selectCursoTableSchema = createSelectSchema(cursoTable);\nexport const insertCursoTableSchema = createInsertSchema(cursoTable).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const notaAlunoTable = pgTable('nota_aluno', {\n  id: serial('id').primaryKey(),\n  alunoId: integer('aluno_id')\n    .references(() => alunoTable.id, { onDelete: 'cascade' })\n    .notNull(),\n  disciplinaId: integer('disciplina_id')\n    .references(() => disciplinaTable.id)\n    .notNull(), // Reference disciplina table\n  nota: real('nota').notNull(),\n  ano: integer('ano').notNull(),\n  semestre: semestreEnum('semestre').notNull(),\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n  // deletedAt: timestamp('deleted_at', {\n  //   withTimezone: true,\n  //   mode: 'date',\n  // }),\n});\n\n// Represents the period when students can apply for projects in a given semester\nexport const periodoInscricaoTable = pgTable('periodo_inscricao', {\n  id: serial('id').primaryKey(),\n  semestre: semestreEnum('semestre').notNull(),\n  ano: integer('ano').notNull(),\n  // editalUniqueId: text('edital_unique_id'), // Link to document table\n  dataInicio: date('data_inicio', { mode: 'date' }).notNull(),\n  dataFim: date('data_fim', { mode: 'date' }).notNull(),\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n  // Unique constraint for year/semester?\n});\n\n// Represents a student's application to a specific project during an application period\nexport const inscricaoTable = pgTable('inscricao', {\n  id: serial('id').primaryKey(),\n  // processoSeletivoId: integer('processo_seletivo_id').references(() => processoSeletivoTable.id).notNull(), // Replaced by periodoInscricaoId + projetoId?\n  periodoInscricaoId: integer('periodo_inscricao_id')\n    .references(() => periodoInscricaoTable.id)\n    .notNull(),\n  projetoId: integer('projeto_id')\n    .references(() => projetoTable.id)\n    .notNull(),\n  alunoId: integer('aluno_id')\n    .references(() => alunoTable.id, { onDelete: 'cascade' })\n    .notNull(),\n  tipoVagaPretendida: tipoInscricaoEnum('tipo_vaga_pretendida'), // What the student wants\n  status: statusInscricaoEnum('status').notNull().default('SUBMITTED'),\n  notaDisciplina: decimal('nota_disciplina', { precision: 4, scale: 2 }),\n  notaSelecao: decimal('nota_selecao', { precision: 4, scale: 2 }),\n  coeficienteRendimento: decimal('cr', { precision: 4, scale: 2 }),\n  notaFinal: decimal('nota_final', { precision: 4, scale: 2 }),\n  feedbackProfessor: text('feedback_professor'), // Reason for selection/rejection\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n  // deletedAt: timestamp('deleted_at', {\n  //   withTimezone: true,\n  //   mode: 'date',\n  // }),\n  // Unique constraint: (periodoInscricaoId, projetoId, alunoId)\n});\n\n// Join table for documents related to an application (e.g., transcript)\nexport const inscricaoDocumentoTable = pgTable('inscricao_documento', {\n  id: serial('id').primaryKey(),\n  inscricaoId: integer('inscricao_id')\n    .references(() => inscricaoTable.id, { onDelete: 'cascade' })\n    .notNull(),\n  fileId: text('file_id').notNull(), // Unique identifier for the uploaded document in the object storage\n  tipoDocumento: text('tipo_documento').notNull(), // e.g., 'HISTORICO_ESCOLAR'\n  // validado: boolean('validado'), // Potentially handled by admin/professor review\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n});\n\n// Join table for documents related to a project (e.g., proposal, signed documents)\nexport const projetoDocumentoTable = pgTable('projeto_documento', {\n  id: serial('id').primaryKey(),\n  projetoId: integer('projeto_id')\n    .references(() => projetoTable.id, { onDelete: 'cascade' })\n    .notNull(),\n  fileId: text('file_id').notNull(), // Unique identifier for the uploaded document in the object storage\n  tipoDocumento: tipoDocumentoProjetoEnum('tipo_documento').notNull(),\n  assinadoPorUserId: integer('assinado_por_user_id').references(\n    () => userTable.id,\n  ), // Who signed this document (professor or admin)\n  observacoes: text('observacoes'), // Optional notes about the document\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n});\n\nexport const selectProjetoDocumentoTableSchema = createSelectSchema(\n  projetoDocumentoTable,\n);\nexport const insertProjetoDocumentoTableSchema = createInsertSchema(\n  projetoDocumentoTable,\n).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\n// Represents an accepted position (monitor role fulfillment)\nexport const vagaTable = pgTable('vaga', {\n  id: serial('id').primaryKey(),\n  alunoId: integer('aluno_id')\n    .references(() => alunoTable.id)\n    .notNull(),\n  projetoId: integer('projeto_id')\n    .references(() => projetoTable.id)\n    .notNull(),\n  inscricaoId: integer('inscricao_id')\n    .references(() => inscricaoTable.id)\n    .notNull()\n    .unique(), // Link back to the accepted inscription\n  tipo: tipoVagaEnum('tipo').notNull(), // Bolsista or Voluntario\n  dataInicio: date('data_inicio', { mode: 'date' }),\n  dataFim: date('data_fim', { mode: 'date' }),\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n  // Unique constraint: (alunoId, projetoId, tipo) for a given period?\n});\n\n// --- Relations ---\n\nexport const departamentoRelations = relations(\n  departamentoTable,\n  ({ many }) => ({\n    projetos: many(projetoTable),\n    professores: many(professorTable),\n    disciplinas: many(disciplinaTable),\n  }),\n);\n\nexport const projetoRelations = relations(projetoTable, ({ one, many }) => ({\n  departamento: one(departamentoTable, {\n    fields: [projetoTable.departamentoId],\n    references: [departamentoTable.id],\n  }),\n  professorResponsavel: one(professorTable, {\n    fields: [projetoTable.professorResponsavelId],\n    references: [professorTable.id],\n  }),\n  disciplinas: many(projetoDisciplinaTable),\n  professoresParticipantes: many(projetoProfessorParticipanteTable),\n  atividades: many(atividadeProjetoTable),\n  inscricoes: many(inscricaoTable),\n  vagas: many(vagaTable),\n  documentos: many(projetoDocumentoTable),\n}));\n\nexport const projetoDisciplinaRelations = relations(\n  projetoDisciplinaTable,\n  ({ one }) => ({\n    projeto: one(projetoTable, {\n      fields: [projetoDisciplinaTable.projetoId],\n      references: [projetoTable.id],\n    }),\n    disciplina: one(disciplinaTable, {\n      fields: [projetoDisciplinaTable.disciplinaId],\n      references: [disciplinaTable.id],\n    }),\n  }),\n);\n\nexport const projetoProfessorParticipanteRelations = relations(\n  projetoProfessorParticipanteTable,\n  ({ one }) => ({\n    projeto: one(projetoTable, {\n      fields: [projetoProfessorParticipanteTable.projetoId],\n      references: [projetoTable.id],\n    }),\n    professor: one(professorTable, {\n      fields: [projetoProfessorParticipanteTable.professorId],\n      references: [professorTable.id],\n    }),\n  }),\n);\n\nexport const atividadeProjetoRelations = relations(\n  atividadeProjetoTable,\n  ({ one }) => ({\n    projeto: one(projetoTable, {\n      fields: [atividadeProjetoTable.projetoId],\n      references: [projetoTable.id],\n    }),\n  }),\n);\n\nexport const professorRelations = relations(\n  professorTable,\n  ({ one, many }) => ({\n    departamento: one(departamentoTable, {\n      fields: [professorTable.departamentoId],\n      references: [departamentoTable.id],\n    }),\n    user: one(userTable, {\n      fields: [professorTable.userId],\n      references: [userTable.id],\n    }),\n    projetosResponsavel: many(projetoTable, {\n      relationName: 'projetosResponsavel',\n    }),\n    projetosParticipante: many(projetoProfessorParticipanteTable),\n    disciplinasResponsavel: many(disciplinaProfessorResponsavelTable),\n  }),\n);\n\nexport const disciplinaRelations = relations(\n  disciplinaTable,\n  ({ many, one }) => ({\n    projetoDisciplinas: many(projetoDisciplinaTable),\n    departamento: one(departamentoTable, {\n      fields: [disciplinaTable.departamentoId],\n      references: [departamentoTable.id],\n    }),\n    notasAlunos: many(notaAlunoTable),\n    professoresResponsaveis: many(disciplinaProfessorResponsavelTable),\n  }),\n);\n\nexport const alunoRelations = relations(alunoTable, ({ one, many }) => ({\n  endereco: one(enderecoTable, {\n    fields: [alunoTable.enderecoId],\n    references: [enderecoTable.id],\n  }),\n  curso: one(cursoTable, {\n    fields: [alunoTable.cursoId],\n    references: [cursoTable.id],\n  }),\n  user: one(userTable, {\n    fields: [alunoTable.userId],\n    references: [userTable.id],\n  }),\n  inscricoes: many(inscricaoTable),\n  notas: many(notaAlunoTable),\n  vagas: many(vagaTable),\n}));\n\nexport const notaAlunoRelations = relations(notaAlunoTable, ({ one }) => ({\n  aluno: one(alunoTable, {\n    fields: [notaAlunoTable.alunoId],\n    references: [alunoTable.id],\n  }),\n  disciplina: one(disciplinaTable, {\n    fields: [notaAlunoTable.disciplinaId],\n    references: [disciplinaTable.id],\n  }),\n}));\n\nexport const periodoInscricaoRelations = relations(\n  periodoInscricaoTable,\n  ({ many, one }) => ({\n    inscricoes: many(inscricaoTable),\n    edital: one(editalTable, {\n      fields: [periodoInscricaoTable.id],\n      references: [editalTable.periodoInscricaoId],\n    }),\n  }),\n);\n\nexport const inscricaoRelations = relations(\n  inscricaoTable,\n  ({ one, many }) => ({\n    periodoInscricao: one(periodoInscricaoTable, {\n      fields: [inscricaoTable.periodoInscricaoId],\n      references: [periodoInscricaoTable.id],\n    }),\n    projeto: one(projetoTable, {\n      fields: [inscricaoTable.projetoId],\n      references: [projetoTable.id],\n    }),\n    aluno: one(alunoTable, {\n      fields: [inscricaoTable.alunoId],\n      references: [alunoTable.id],\n    }),\n    documentos: many(inscricaoDocumentoTable),\n    vaga: one(vagaTable, {\n      // Link to the resulting Vaga if accepted\n      fields: [inscricaoTable.id],\n      references: [vagaTable.inscricaoId],\n    }),\n  }),\n);\n\nexport const inscricaoDocumentoRelations = relations(\n  inscricaoDocumentoTable,\n  ({ one }) => ({\n    inscricao: one(inscricaoTable, {\n      fields: [inscricaoDocumentoTable.inscricaoId],\n      references: [inscricaoTable.id],\n    }),\n  }),\n);\n\nexport const projetoDocumentoRelations = relations(\n  projetoDocumentoTable,\n  ({ one }) => ({\n    projeto: one(projetoTable, {\n      fields: [projetoDocumentoTable.projetoId],\n      references: [projetoTable.id],\n    }),\n    assinadoPor: one(userTable, {\n      fields: [projetoDocumentoTable.assinadoPorUserId],\n      references: [userTable.id],\n    }),\n  }),\n);\n\nexport const vagaRelations = relations(vagaTable, ({ one }) => ({\n  aluno: one(alunoTable, {\n    fields: [vagaTable.alunoId],\n    references: [alunoTable.id],\n  }),\n  projeto: one(projetoTable, {\n    fields: [vagaTable.projetoId],\n    references: [projetoTable.id],\n  }),\n  inscricao: one(inscricaoTable, {\n    fields: [vagaTable.inscricaoId],\n    references: [inscricaoTable.id],\n  }),\n}));\n\nexport const disciplinaProfessorResponsavelTable = pgTable(\n  'disciplina_professor_responsavel',\n  {\n    id: serial('id').primaryKey(),\n    disciplinaId: integer('disciplina_id')\n      .references(() => disciplinaTable.id)\n      .notNull(),\n    professorId: integer('professor_id')\n      .references(() => professorTable.id)\n      .notNull(),\n    ano: integer('ano').notNull(),\n    semestre: semestreEnum('semestre').notNull(),\n    createdAt: timestamp('created_at', {\n      withTimezone: true,\n      mode: 'date',\n    })\n      .defaultNow()\n      .notNull(),\n    updatedAt: timestamp('updated_at', {\n      withTimezone: true,\n      mode: 'date',\n    }).$onUpdate(() => new Date()),\n  },\n);\n\nexport const disciplinaProfessorResponsavelRelations = relations(\n  disciplinaProfessorResponsavelTable,\n  ({ one }) => ({\n    disciplina: one(disciplinaTable, {\n      fields: [disciplinaProfessorResponsavelTable.disciplinaId],\n      references: [disciplinaTable.id],\n    }),\n    professor: one(professorTable, {\n      fields: [disciplinaProfessorResponsavelTable.professorId],\n      references: [professorTable.id],\n    }),\n  }),\n);\n\n// Tabela para histórico de importações de planejamento\nexport const importacaoPlanejamentoTable = pgTable('importacao_planejamento', {\n  id: serial('id').primaryKey(),\n  fileId: text('file_id').notNull(), // ID do arquivo no MinIO\n  nomeArquivo: varchar('nome_arquivo').notNull(),\n  ano: integer('ano').notNull(),\n  semestre: semestreEnum('semestre').notNull(),\n  totalProjetos: integer('total_projetos').notNull().default(0),\n  projetosCriados: integer('projetos_criados').notNull().default(0),\n  projetosComErro: integer('projetos_com_erro').notNull().default(0),\n  status: varchar('status').notNull().default('PROCESSANDO'), // PROCESSANDO, CONCLUIDO, ERRO\n  erros: text('erros'), // JSON com detalhes dos erros\n  importadoPorUserId: integer('importado_por_user_id')\n    .references(() => userTable.id)\n    .notNull(),\n  createdAt: timestamp('created_at', {\n    withTimezone: true,\n    mode: 'date',\n  })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', {\n    withTimezone: true,\n    mode: 'date',\n  }).$onUpdate(() => new Date()),\n});\n\nexport const importacaoPlanejamentoRelations = relations(\n  importacaoPlanejamentoTable,\n  ({ one }) => ({\n    importadoPor: one(userTable, {\n      fields: [importacaoPlanejamentoTable.importadoPorUserId],\n      references: [userTable.id],\n    }),\n  }),\n);\n\nexport const statusEnvioEnum = pgEnum('status_envio_enum', [\n  'ENVIADO',\n  'FALHOU',\n]);\n\nexport const notificacaoHistoricoTable = pgTable('notificacao_historico', {\n  id: serial('id').primaryKey(),\n  destinatarioEmail: text('destinatario_email').notNull(),\n  assunto: varchar('assunto', { length: 255 }).notNull(),\n  tipoNotificacao: varchar('tipo_notificacao', { length: 100 }).notNull(),\n  statusEnvio: statusEnvioEnum('status_envio').notNull(),\n  dataEnvio: timestamp('data_envio', { withTimezone: true, mode: 'date' })\n    .defaultNow()\n    .notNull(),\n  mensagemErro: text('mensagem_erro'),\n  projetoId: integer('projeto_id').references(() => projetoTable.id),\n  alunoId: integer('aluno_id').references(() => alunoTable.id),\n  remetenteUserId: integer('remetente_user_id').references(() => userTable.id),\n});\n\nexport const notificacaoHistoricoRelations = relations(notificacaoHistoricoTable, ({ one }) => ({\n  projeto: one(projetoTable, {\n    fields: [notificacaoHistoricoTable.projetoId],\n    references: [projetoTable.id],\n  }),\n  aluno: one(alunoTable, {\n    fields: [notificacaoHistoricoTable.alunoId],\n    references: [alunoTable.id],\n  }),\n  remetente: one(userTable, {\n    fields: [notificacaoHistoricoTable.remetenteUserId],\n    references: [userTable.id],\n  }),\n}));\n\n// Tabela para Editais\nexport const editalTable = pgTable('edital', {\n  id: serial('id').primaryKey(),\n  periodoInscricaoId: integer('periodo_inscricao_id')\n    .references(() => periodoInscricaoTable.id)\n    .notNull()\n    .unique(),\n  numeroEdital: varchar('numero_edital', { length: 50 }).notNull().unique(),\n  titulo: varchar('titulo', { length: 255 })\n    .notNull()\n    .default('Edital Interno de Seleção de Monitores'),\n  descricaoHtml: text('descricao_html'),\n  fileIdAssinado: text('file_id_assinado'), // PDF do edital assinado\n  dataPublicacao: date('data_publicacao', { mode: 'date' }),\n  publicado: boolean('publicado').default(false).notNull(),\n  criadoPorUserId: integer('criado_por_user_id')\n    .references(() => userTable.id)\n    .notNull(),\n  createdAt: timestamp('created_at', { withTimezone: true, mode: 'date' })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', { withTimezone: true, mode: 'date' })\n    .$onUpdate(() => new Date()),\n});\n\nexport const editalRelations = relations(editalTable, ({ one }) => ({\n  periodoInscricao: one(periodoInscricaoTable, {\n    fields: [editalTable.periodoInscricaoId],\n    references: [periodoInscricaoTable.id],\n  }),\n  criadoPor: one(userTable, {\n    fields: [editalTable.criadoPorUserId],\n    references: [userTable.id],\n  }),\n}));\n\n// Enum para status de convite de professor\nexport const professorInvitationStatusEnum = pgEnum(\n  'professor_invitation_status_enum',\n  ['PENDING', 'ACCEPTED', 'EXPIRED'],\n);\n\n// Tabela para armazenar convites para professores\nexport const professorInvitationTable = pgTable('professor_invitation', {\n  id: serial('id').primaryKey(),\n  email: varchar('email', { length: 255 }).notNull().unique(), // Email do professor convidado\n  token: varchar('token', { length: 255 }).notNull().unique(), // Token único para o link do convite\n  status: professorInvitationStatusEnum('status').notNull().default('PENDING'),\n  expiresAt: timestamp('expires_at', { withTimezone: true, mode: 'date' }).notNull(),\n  invitedByUserId: integer('invited_by_user_id') // Admin que enviou o convite\n    .references(() => userTable.id)\n    .notNull(),\n  acceptedByUserId: integer('accepted_by_user_id').references( // Usuário que aceitou (após criação/login)\n    () => userTable.id,\n  ),\n  createdAt: timestamp('created_at', { withTimezone: true, mode: 'date' })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', { withTimezone: true, mode: 'date' })\n    .$onUpdate(() => new Date()),\n});\n\nexport const professorInvitationRelations = relations(\n  professorInvitationTable,\n  ({ one }) => ({\n    invitedByUser: one(userTable, {\n      fields: [professorInvitationTable.invitedByUserId],\n      references: [userTable.id],\n      relationName: 'invitedByUser',\n    }),\n    acceptedByUser: one(userTable, {\n      fields: [professorInvitationTable.acceptedByUserId],\n      references: [userTable.id],\n      relationName: 'acceptedByUser',\n    }),\n  }),\n);\n\n// Tabela para armazenar dados de assinaturas digitais\nexport const assinaturaDocumentoTable = pgTable('assinatura_documento', {\n  id: serial('id').primaryKey(),\n  assinaturaData: text('assinatura_data').notNull(), // Base64 data URL da imagem da assinatura\n  tipoAssinatura: tipoAssinaturaEnum('tipo_assinatura').notNull(),\n  userId: integer('user_id').references(() => userTable.id).notNull(), // Quem assinou\n  projetoId: integer('projeto_id').references(() => projetoTable.id), // Se assinatura de um projeto\n  vagaId: integer('vaga_id').references(() => vagaTable.id), // Se assinatura de um termo (vinculado à vaga)\n  editalId: integer('edital_id').references(() => editalTable.id), // Se assinatura de um edital\n  createdAt: timestamp('created_at', { withTimezone: true, mode: 'date' })\n    .defaultNow()\n    .notNull(),\n});\n\nexport const assinaturaDocumentoRelations = relations(assinaturaDocumentoTable, ({ one }) => ({\n  user: one(userTable, {\n    fields: [assinaturaDocumentoTable.userId],\n    references: [userTable.id],\n  }),\n  projeto: one(projetoTable, {\n    fields: [assinaturaDocumentoTable.projetoId],\n    references: [projetoTable.id],\n  }),\n  vaga: one(vagaTable, {\n    fields: [assinaturaDocumentoTable.vagaId],\n    references: [vagaTable.id],\n  }),\n  edital: one(editalTable, {\n    fields: [assinaturaDocumentoTable.editalId],\n    references: [editalTable.id],\n  }),\n}));\n\n// Tabela para templates de projeto, para pré-preenchimento na importação\nexport const projetoTemplateTable = pgTable('projeto_template', {\n  id: serial('id').primaryKey(),\n  disciplinaId: integer('disciplina_id')\n    .references(() => disciplinaTable.id)\n    .notNull()\n    .unique(), // Cada disciplina pode ter um template\n  tituloDefault: varchar('titulo_default', { length: 255 }),\n  descricaoDefault: text('descricao_default'), // Objetivos/Justificativa padrão\n  cargaHorariaSemanaDefault: integer('carga_horaria_semana_default'),\n  numeroSemanasDefault: integer('numero_semanas_default'),\n  publicoAlvoDefault: text('publico_alvo_default'),\n  atividadesDefault: text('atividades_default'), // e.g., JSON array de strings ou ;-separadas\n  criadoPorUserId: integer('criado_por_user_id') \n    .references(() => userTable.id)\n    .notNull(),\n  ultimaAtualizacaoUserId: integer('ultima_atualizacao_user_id')\n    .references(() => userTable.id),\n  createdAt: timestamp('created_at', { withTimezone: true, mode: 'date' })\n    .defaultNow()\n    .notNull(),\n  updatedAt: timestamp('updated_at', { withTimezone: true, mode: 'date' })\n    .$onUpdate(() => new Date()),\n});\n\nexport const projetoTemplateRelations = relations(projetoTemplateTable, ({ one }) => ({\n  disciplina: one(disciplinaTable, {\n    fields: [projetoTemplateTable.disciplinaId],\n    references: [disciplinaTable.id],\n  }),\n  criadoPor: one(userTable, {\n    fields: [projetoTemplateTable.criadoPorUserId],\n    references: [userTable.id],\n    relationName: 'templateCriadoPor',\n  }),\n  ultimaAtualizacaoPor: one(userTable, {\n    fields: [projetoTemplateTable.ultimaAtualizacaoUserId],\n    references: [userTable.id],\n    relationName: 'templateAtualizadoPor',\n  }),\n}));\n\nexport const ataSelecaoTable = pgTable('ata_selecao', {\n  id: serial('id').primaryKey(),\n  projetoId: integer('projeto_id')\n    .references(() => projetoTable.id, { onDelete: 'cascade' })\n    .notNull()\n    .unique(), // Cada projeto tem uma ata de seleção\n  fileId: text('file_id'), // ID do PDF da ata no MinIO\n  conteudoHtml: text('conteudo_html'), // Conteúdo da ata para renderização\n  dataGeracao: timestamp('data_geracao', { withTimezone: true, mode: 'date' })\n    .defaultNow()\n    .notNull(),\n  geradoPorUserId: integer('gerado_por_user_id')\n    .references(() => userTable.id)\n    .notNull(),\n  assinado: boolean('assinado').default(false).notNull(),\n  dataAssinatura: timestamp('data_assinatura', { withTimezone: true, mode: 'date' }),\n});\n\nexport const ataSelecaoRelations = relations(ataSelecaoTable, ({ one }) => ({\n    projeto: one(projetoTable, {\n        fields: [ataSelecaoTable.projetoId],\n        references: [projetoTable.id],\n    }),\n    geradoPor: one(userTable, {\n        fields: [ataSelecaoTable.geradoPorUserId],\n        references: [userTable.id],\n    }),\n}));\n\n// Export all schemas and relations\n// export * from './schema'; // This line seems to cause issues if present, ensure it's handled correctly or removed if not standard for the project setup\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1303, "column": 0}, "map": {"version":3,"sources":["file:///workspace/packages/validators/user.ts"],"sourcesContent":["import { createSelectSchema } from 'drizzle-zod';\nimport { userTable } from '../../src/server/database/schema';\n\nexport const userSelectSchema = createSelectSchema(userTable);"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAEO,MAAM,mBAAmB,CAAA,GAAA,4HAAA,CAAA,qBAAkB,AAAD,EAAE,4HAAA,CAAA,YAAS","debugId":null}},
    {"offset": {"line": 1323, "column": 0}, "map": {"version":3,"sources":["file:///workspace/apps/web-next/src/server/routers/auth.ts"],"sourcesContent":["import { router, protectedProcedure } from '../trpc';\nimport { userSelectSchema } from '@validators';\n\nexport const authRouter = router({\n  me: protectedProcedure.query(({ ctx }) => {\n    if (!ctx.user) return null;\n    return userSelectSchema.parse(ctx.user);\n  }),\n});"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAEO,MAAM,aAAa,CAAA,GAAA,qIAAA,CAAA,SAAM,AAAD,EAAE;IAC/B,IAAI,qIAAA,CAAA,qBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE;QACnC,IAAI,CAAC,IAAI,IAAI,EAAE,OAAO;QACtB,OAAO,uHAAA,CAAA,mBAAgB,CAAC,KAAK,CAAC,IAAI,IAAI;IACxC;AACF","debugId":null}},
    {"offset": {"line": 1348, "column": 0}, "map": {"version":3,"sources":["file:///workspace/src/utils/env.ts"],"sourcesContent":["const clientEnv = {\n  VITE_ENABLE_STAGEWISE: process.env.NEXT_PUBLIC_ENABLE_STAGEWISE,\n};\n\nexport const env = {\n  DATABASE_URL: process.env.DATABASE_URL,\n  CAS_SERVER_URL_PREFIX:\n    process.env.CAS_SERVER_URL_PREFIX || 'https://autenticacao.ufba.br/ca',\n  SERVER_URL: process.env.SERVER_URL || 'http://localhost:3000/api',\n  CLIENT_URL: process.env.CLIENT_URL || 'http://localhost:3000',\n  NODE_ENV: process.env.NODE_ENV,\n  MINIO_ENDPOINT: process.env.MINIO_ENDPOINT || 'localhost',\n  MINIO_ACCESS_KEY: process.env.MINIO_ACCESS_KEY || 'minioadmin',\n  MINIO_SECRET_KEY: process.env.MINIO_SECRET_KEY || 'minioadmin',\n  MINIO_BUCKET_NAME: process.env.MINIO_BUCKET_NAME || 'monitoria-arquivos',\n  EMAIL_USER: process.env.EMAIL_USER || '',\n  EMAIL_PASS: process.env.EMAIL_PASS || '',\n  ...clientEnv,\n};\n"],"names":[],"mappings":";;;AAAA,MAAM,YAAY;IAChB,uBAAuB,QAAQ,GAAG,CAAC,4BAA4B;AACjE;AAEO,MAAM,MAAM;IACjB,cAAc,QAAQ,GAAG,CAAC,YAAY;IACtC,uBACE,QAAQ,GAAG,CAAC,qBAAqB,IAAI;IACvC,YAAY,QAAQ,GAAG,CAAC,UAAU,IAAI;IACtC,YAAY,QAAQ,GAAG,CAAC,UAAU,IAAI;IACtC,QAAQ;IACR,gBAAgB,QAAQ,GAAG,CAAC,cAAc,IAAI;IAC9C,kBAAkB,QAAQ,GAAG,CAAC,gBAAgB,IAAI;IAClD,kBAAkB,QAAQ,GAAG,CAAC,gBAAgB,IAAI;IAClD,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB,IAAI;IACpD,YAAY,QAAQ,GAAG,CAAC,UAAU,IAAI;IACtC,YAAY,QAAQ,GAAG,CAAC,UAAU,IAAI;IACtC,GAAG,SAAS;AACd","debugId":null}},
    {"offset": {"line": 1394, "column": 0}, "map": {"version":3,"sources":["file:///workspace/src/server/database/index.ts"],"sourcesContent":["import { env } from '@/utils/env';\nimport { drizzle } from 'drizzle-orm/node-postgres';\nimport { Pool } from 'pg';\nimport * as schema from './schema';\n\nconst pool = new Pool({\n  connectionString: env.DATABASE_URL,\n});\n\nconst combinedSchema = { ...schema };\n\nconst db = drizzle(pool, { schema: combinedSchema });\n\nexport { db };\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;;;;;;AAEA,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IACpB,kBAAkB,4GAAA,CAAA,MAAG,CAAC,YAAY;AACpC;AAEA,MAAM,iBAAiB;IAAE,GAAG,4HAAM;AAAC;AAEnC,MAAM,KAAK,CAAA,GAAA,oKAAA,CAAA,UAAO,AAAD,EAAE,MAAM;IAAE,QAAQ;AAAe","debugId":null}},
    {"offset": {"line": 1428, "column": 0}, "map": {"version":3,"sources":["file:///workspace/apps/web-next/src/server/routers/signature.ts"],"sourcesContent":["import { router, protectedProcedure } from '../trpc';\nimport { z } from 'zod';\nimport { db } from '@server/database';\nimport { userTable, assinaturaDocumentoTable, projetoTable } from '@server/database/schema';\nimport { eq } from 'drizzle-orm';\n\nexport const signatureRouter = router({\n  getProfile: protectedProcedure.query(async ({ ctx }) => {\n    return db\n      .select({ assinaturaDefault: userTable.assinaturaDefault, dataAssinaturaDefault: userTable.dataAssinaturaDefault })\n      .from(userTable)\n      .where(eq(userTable.id, ctx.user!.id))\n      .then((r) => r[0] || null);\n  }),\n  saveProfile: protectedProcedure\n    .input(z.object({ signatureImage: z.string().min(10) }))\n    .mutation(async ({ ctx, input }) => {\n      const now = new Date();\n      await db\n        .update(userTable)\n        .set({ assinaturaDefault: input.signatureImage, dataAssinaturaDefault: now })\n        .where(eq(userTable.id, ctx.user!.id));\n      return { success: true };\n    }),\n  signProject: protectedProcedure\n    .input(\n      z.object({\n        projetoId: z.number().int().positive(),\n        signatureImage: z.string().min(10),\n        tipoAssinatura: z.enum(['PROJETO_PROFESSOR_RESPONSAVEL', 'PROJETO_COORDENADOR_DEPARTAMENTO']),\n      }),\n    )\n    .mutation(async ({ ctx, input }) => {\n      // insere assinatura\n      const [row] = await db\n        .insert(assinaturaDocumentoTable)\n        .values({\n          assinaturaData: input.signatureImage,\n          tipoAssinatura: input.tipoAssinatura,\n          userId: ctx.user!.id,\n          projetoId: input.projetoId,\n        })\n        .returning({ id: assinaturaDocumentoTable.id });\n\n      // atualiza status projeto\n      await db\n        .update(projetoTable)\n        .set({ status: 'PENDING_ADMIN_SIGNATURE' })\n        .where(eq(projetoTable.id, input.projetoId));\n\n      return { success: true, signatureId: row.id };\n    }),\n});"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAEO,MAAM,kBAAkB,CAAA,GAAA,qIAAA,CAAA,SAAM,AAAD,EAAE;IACpC,YAAY,qIAAA,CAAA,qBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE;QACjD,OAAO,2HAAA,CAAA,KAAE,CACN,MAAM,CAAC;YAAE,mBAAmB,4HAAA,CAAA,YAAS,CAAC,iBAAiB;YAAE,uBAAuB,4HAAA,CAAA,YAAS,CAAC,qBAAqB;QAAC,GAChH,IAAI,CAAC,4HAAA,CAAA,YAAS,EACd,KAAK,CAAC,CAAA,GAAA,4HAAA,CAAA,KAAE,AAAD,EAAE,4HAAA,CAAA,YAAS,CAAC,EAAE,EAAE,IAAI,IAAI,CAAE,EAAE,GACnC,IAAI,CAAC,CAAC,IAAM,CAAC,CAAC,EAAE,IAAI;IACzB;IACA,aAAa,qIAAA,CAAA,qBAAkB,CAC5B,KAAK,CAAC,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,gBAAgB,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAAI,IACpD,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE;QAC7B,MAAM,MAAM,IAAI;QAChB,MAAM,2HAAA,CAAA,KAAE,CACL,MAAM,CAAC,4HAAA,CAAA,YAAS,EAChB,GAAG,CAAC;YAAE,mBAAmB,MAAM,cAAc;YAAE,uBAAuB;QAAI,GAC1E,KAAK,CAAC,CAAA,GAAA,4HAAA,CAAA,KAAE,AAAD,EAAE,4HAAA,CAAA,YAAS,CAAC,EAAE,EAAE,IAAI,IAAI,CAAE,EAAE;QACtC,OAAO;YAAE,SAAS;QAAK;IACzB;IACF,aAAa,qIAAA,CAAA,qBAAkB,CAC5B,KAAK,CACJ,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,WAAW,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ;QACpC,gBAAgB,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAC/B,gBAAgB,sGAAA,CAAA,IAAC,CAAC,IAAI,CAAC;YAAC;YAAiC;SAAmC;IAC9F,IAED,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE;QAC7B,oBAAoB;QACpB,MAAM,CAAC,IAAI,GAAG,MAAM,2HAAA,CAAA,KAAE,CACnB,MAAM,CAAC,4HAAA,CAAA,2BAAwB,EAC/B,MAAM,CAAC;YACN,gBAAgB,MAAM,cAAc;YACpC,gBAAgB,MAAM,cAAc;YACpC,QAAQ,IAAI,IAAI,CAAE,EAAE;YACpB,WAAW,MAAM,SAAS;QAC5B,GACC,SAAS,CAAC;YAAE,IAAI,4HAAA,CAAA,2BAAwB,CAAC,EAAE;QAAC;QAE/C,0BAA0B;QAC1B,MAAM,2HAAA,CAAA,KAAE,CACL,MAAM,CAAC,4HAAA,CAAA,eAAY,EACnB,GAAG,CAAC;YAAE,QAAQ;QAA0B,GACxC,KAAK,CAAC,CAAA,GAAA,4HAAA,CAAA,KAAE,AAAD,EAAE,4HAAA,CAAA,eAAY,CAAC,EAAE,EAAE,MAAM,SAAS;QAE5C,OAAO;YAAE,SAAS;YAAM,aAAa,IAAI,EAAE;QAAC;IAC9C;AACJ","debugId":null}},
    {"offset": {"line": 1502, "column": 0}, "map": {"version":3,"sources":["file:///workspace/apps/web-next/src/server/routers/_app.ts"],"sourcesContent":["import { router, publicProcedure } from '../trpc';\nimport { authRouter } from './auth';\nimport { signatureRouter } from './signature';\n\nexport const appRouter = router({\n  health: publicProcedure.query(() => 'ok'),\n  auth: authRouter,\n  signature: signatureRouter,\n});\n\nexport type AppRouter = typeof appRouter;"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;;;;;;AAEO,MAAM,YAAY,CAAA,GAAA,qIAAA,CAAA,SAAM,AAAD,EAAE;IAC9B,QAAQ,qIAAA,CAAA,kBAAe,CAAC,KAAK,CAAC,IAAM;IACpC,MAAM,gJAAA,CAAA,aAAU;IAChB,WAAW,qJAAA,CAAA,kBAAe;AAC5B","debugId":null}},
    {"offset": {"line": 1537, "column": 0}, "map": {"version":3,"sources":["file:///workspace/src/utils/types.ts"],"sourcesContent":["export const LUCIA_SESSION_COOKIE_NAME = 'session';\n"],"names":[],"mappings":";;;AAAO,MAAM,4BAA4B","debugId":null}},
    {"offset": {"line": 1567, "column": 0}, "map": {"version":3,"sources":["file:///workspace/src/server/lib/auth.ts"],"sourcesContent":["import { env } from '@/utils/env';\nimport { LUCIA_SESSION_COOKIE_NAME } from '@/utils/types';\nimport { DrizzlePostgreSQLAdapter } from '@lucia-auth/adapter-drizzle';\nimport { Lucia, TimeSpan } from 'lucia';\nimport { db } from '../database';\nimport { sessionTable, userTable, type userRoleEnum } from '../database/schema';\n\nconst isProduction = env.NODE_ENV === 'production';\nconst adapter = new DrizzlePostgreSQLAdapter(db, sessionTable, userTable);\n\nexport const lucia = new Lucia(adapter, {\n  sessionExpiresIn: new TimeSpan(30, 'd'), // 30 days\n  sessionCookie: {\n    name: LUCIA_SESSION_COOKIE_NAME,\n    expires: false, // session cookies have very long lifespan (2 years)\n    attributes: {\n      secure: isProduction,\n      sameSite: 'lax',\n      path: '/',\n    },\n  },\n  getUserAttributes: (attributes) => {\n    return {\n      username: attributes.username,\n      email: attributes.email,\n      role: attributes.role,\n    };\n  },\n});\n\ndeclare module 'lucia' {\n  interface Register {\n    Lucia: typeof lucia;\n    DatabaseUserAttributes: DatabaseUserAttributes;\n    UserId: number;\n  }\n\n  interface DatabaseUserAttributes {\n    username: string;\n    email: string;\n    role: (typeof userRoleEnum.enumValues)[number];\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAEA,MAAM,eAAe,4GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK;AACtC,MAAM,UAAU,IAAI,0KAAA,CAAA,2BAAwB,CAAC,2HAAA,CAAA,KAAE,EAAE,4HAAA,CAAA,eAAY,EAAE,4HAAA,CAAA,YAAS;AAEjE,MAAM,QAAQ,IAAI,0GAAA,CAAA,QAAK,CAAC,SAAS;IACtC,kBAAkB,IAAI,0GAAA,CAAA,WAAQ,CAAC,IAAI;IACnC,eAAe;QACb,MAAM,8GAAA,CAAA,4BAAyB;QAC/B,SAAS;QACT,YAAY;YACV,QAAQ;YACR,UAAU;YACV,MAAM;QACR;IACF;IACA,mBAAmB,CAAC;QAClB,OAAO;YACL,UAAU,WAAW,QAAQ;YAC7B,OAAO,WAAW,KAAK;YACvB,MAAM,WAAW,IAAI;QACvB;IACF;AACF","debugId":null}},
    {"offset": {"line": 1617, "column": 0}, "map": {"version":3,"sources":["file:///workspace/src/utils/lucia.ts"],"sourcesContent":["import { lucia } from '@/server/lib/auth';\nimport cookie from 'cookie';\n\nexport const getSessionId = (headers: Headers) => {\n  const cookies = cookie.parse(headers.get('Cookie') || '');\n  const sessionId = cookies[lucia.sessionCookieName];\n  return sessionId;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;AAEO,MAAM,eAAe,CAAC;IAC3B,MAAM,UAAU,qGAAA,CAAA,UAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,aAAa;IACtD,MAAM,YAAY,OAAO,CAAC,qHAAA,CAAA,QAAK,CAAC,iBAAiB,CAAC;IAClD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1640, "column": 0}, "map": {"version":3,"sources":["file:///workspace/apps/web-next/src/server/context.ts"],"sourcesContent":["import { type NextApiRequest, type NextApiResponse } from 'next';\nimport { parse } from 'cookie';\nimport { JwtUser, Context } from './trpc';\nimport { lucia } from '@/server/lib/auth';\nimport { getSessionId } from '@/utils/lucia';\nimport { db } from '@/server/database';\nimport { userTable } from '@/server/database/schema';\nimport { eq } from 'drizzle-orm';\n\nexport async function createContext({ req, res }: { req: NextApiRequest; res: NextApiResponse }): Promise<Context> {\n  // TODO: integrate lucia session cookie verification; stub for now\n  const cookies = parse(req.headers.cookie || '');\n  const sessionId = getSessionId(new Headers(req.headers as any));\n\n  let currentUser: JwtUser | null = null;\n  if (sessionId) {\n    const { session, user } = await lucia.validateSession(sessionId);\n    if (session && user) {\n      // fetch role from DB\n      const res = await db\n        .select({ role: userTable.role })\n        .from(userTable)\n        .where(eq(userTable.id, user.id))\n        .limit(1);\n      const role = res[0]?.role;\n      currentUser = { id: user.id, username: user.username, email: user.email, role } as any;\n    }\n  }\n\n  return {\n    user: currentUser,\n  };\n}"],"names":[],"mappings":";;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAEO,eAAe,cAAc,EAAE,GAAG,EAAE,GAAG,EAAiD;IAC7F,kEAAkE;IAClE,MAAM,UAAU,CAAA,GAAA,qGAAA,CAAA,QAAK,AAAD,EAAE,IAAI,OAAO,CAAC,MAAM,IAAI;IAC5C,MAAM,YAAY,CAAA,GAAA,8GAAA,CAAA,eAAY,AAAD,EAAE,IAAI,QAAQ,IAAI,OAAO;IAEtD,IAAI,cAA8B;IAClC,IAAI,WAAW;QACb,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,MAAM,qHAAA,CAAA,QAAK,CAAC,eAAe,CAAC;QACtD,IAAI,WAAW,MAAM;YACnB,qBAAqB;YACrB,MAAM,MAAM,MAAM,2HAAA,CAAA,KAAE,CACjB,MAAM,CAAC;gBAAE,MAAM,4HAAA,CAAA,YAAS,CAAC,IAAI;YAAC,GAC9B,IAAI,CAAC,4HAAA,CAAA,YAAS,EACd,KAAK,CAAC,CAAA,GAAA,4HAAA,CAAA,KAAE,AAAD,EAAE,4HAAA,CAAA,YAAS,CAAC,EAAE,EAAE,KAAK,EAAE,GAC9B,KAAK,CAAC;YACT,MAAM,OAAO,GAAG,CAAC,EAAE,EAAE;YACrB,cAAc;gBAAE,IAAI,KAAK,EAAE;gBAAE,UAAU,KAAK,QAAQ;gBAAE,OAAO,KAAK,KAAK;gBAAE;YAAK;QAChF;IACF;IAEA,OAAO;QACL,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 1695, "column": 0}, "map": {"version":3,"sources":["file:///workspace/apps/web-next/pages/api/trpc/%5Btrpc%5D.ts"],"sourcesContent":["import { createNextApiHandler } from '@trpc/server/adapters/next';\nimport { appRouter } from '../../../src/server/routers/_app';\nimport { createContext } from '../../../src/server/context';\n\nexport default createNextApiHandler({\n  router: appRouter,\n  createContext,\n});"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;;;;;uCAEe,CAAA,GAAA,sJAAA,CAAA,uBAAoB,AAAD,EAAE;IAClC,QAAQ,gJAAA,CAAA,YAAS;IACjB,eAAA,wIAAA,CAAA,gBAAa;AACf","debugId":null}}]
}